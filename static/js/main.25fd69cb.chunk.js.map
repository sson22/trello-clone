{"version":3,"sources":["atoms.tsx","Components/DragabbleCard.tsx","Components/Board.tsx","Components/Trash.tsx","App.tsx","index.tsx","theme.ts"],"names":["toDoState","atom","key","default","Doing","Done","Card","styled","div","props","isDragging","theme","cardColor","DragabbleCard","toDoId","toDoText","index","setToDos","useSetRecoilState","console","log","draggableId","magic","snapshot","ref","innerRef","dragHandleProps","draggableProps","style","display","justifyContent","width","cursor","React","memo","Wrapper","boardColor","Title","h2","Area","isDraggingOver","isDraggingFromThis","Form","form","Board","toDos","boardId","useForm","register","setValue","handleSubmit","onSubmit","toDo","newToDo","id","Date","now","text","allBoards","required","type","placeholder","droppableId","info","Boolean","draggingFromThisWith","droppableProps","map","Trash","xmlns","fill","viewBox","strokeWidth","stroke","className","strokeLinecap","strokeLinejoin","d","Boards","App","useRecoilState","onDragEnd","destination","source","boardCopy2","splice","boardCopy","taskObj","sourceBoard","taskObj2","destinationBoard","Object","keys","GlobalStyle","createGlobalStyle","bgColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25fd69cb.chunk.js","sourcesContent":["import { atom } from \"recoil\";\n\nexport interface ITodo {\n  id: number;\n  text: string;\n}\n\ninterface IToDoState {\n  [key: string]: ITodo[];\n}\n\nexport const toDoState = atom<IToDoState>({\n  key: \"toDo\",\n  default: {\n    \"To Do\": [],\n    Doing: [],\n    Done: [],\n  },\n});\n","import React, { useState } from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { toDoState } from \"../atoms\";\nimport { useSetRecoilState } from \"recoil\";\nconst Card = styled.div<{ isDragging: boolean }>`\n  border-radius: 5px;\n  margin-bottom: 5px;\n  padding: 10px;\n  background-color: ${(props) =>\n    props.isDragging ? \"#e4f2ff\" : props.theme.cardColor};\n  box-shadow: ${(props) =>\n    props.isDragging ? \"0px 2px 5px rgba(0, 0, 0, 0.05)\" : \"none\"};\n`;\n\ninterface IDragabbleCardProps {\n  toDoId: number;\n  toDoText: string;\n  index: number;\n}\n// interface IForm {\n//   toDo: string;\n// }\nfunction DragabbleCard({ toDoId, toDoText, index }: IDragabbleCardProps) {\n  const setToDos = useSetRecoilState(toDoState);\n  console.log(setToDos);\n  return (\n    <Draggable draggableId={toDoId + \"\"} index={index}>\n      {(magic, snapshot) => (\n        <Card\n          isDragging={snapshot.isDragging}\n          ref={magic.innerRef}\n          {...magic.dragHandleProps}\n          {...magic.draggableProps}\n        >\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <span>{toDoText}</span>\n            <span style={{ width: \"17px\", cursor: \"pointer\" }}></span>\n          </div>\n        </Card>\n      )}\n    </Draggable>\n  );\n}\nexport default React.memo(DragabbleCard);\n","import { useForm } from \"react-hook-form\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport DragabbleCard from \"./DragabbleCard\";\nimport { ITodo, toDoState } from \"../atoms\";\nimport { useSetRecoilState } from \"recoil\";\nconst Wrapper = styled.div`\n  width: 300px;\n  padding-top: 10px;\n  background-color: ${(props) => props.theme.boardColor};\n  border-radius: 5px;\n  min-height: 300px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n`;\nconst Title = styled.h2`\n  text-align: center;\n  font-weight: 600;\n  margin-bottom: 10px;\n  font-size: 18px;\n`;\ninterface IAreaProps {\n  isDraggingFromThis: boolean;\n  isDraggingOver: boolean;\n}\nconst Area = styled.div<IAreaProps>`\n  background-color: ${(props) =>\n    props.isDraggingOver\n      ? \"#dfe6e9\"\n      : props.isDraggingFromThis\n      ? \"#b2bec3\"\n      : \"transparent\"};\n  flex-grow: 1;\n  transition: background-color 0.3s ease-in-out;\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  padding-bottom: 10px;\n  input {\n    font-size: 16px;\n    border: 0;\n    background-color: white;\n    width: 80%;\n    padding: 10px;\n    border-radius: 5px;\n    text-align: center;\n    margin: 0 auto;\n  }\n`;\n\ninterface IBoardProps {\n  toDos: ITodo[];\n  boardId: string;\n}\ninterface IForm {\n  toDo: string;\n}\nfunction Board({ toDos, boardId }: IBoardProps) {\n  const setToDos = useSetRecoilState(toDoState);\n  const { register, setValue, handleSubmit } = useForm<IForm>();\n  const onValid = ({ toDo }: IForm) => {\n    const newToDo = {\n      id: Date.now(),\n      text: toDo,\n    };\n    setToDos((allBoards) => {\n      return {\n        ...allBoards,\n        [boardId]: [newToDo, ...allBoards[boardId]],\n      };\n    });\n    setValue(\"toDo\", \"\");\n  };\n\n  return (\n    <Wrapper>\n      <Title>{boardId}</Title>\n      <Form onSubmit={handleSubmit(onValid)}>\n        <input\n          {...register(\"toDo\", { required: true })}\n          type=\"text\"\n          placeholder={`Add task on ${boardId}`}\n        />\n      </Form>\n      <Droppable droppableId={boardId}>\n        {(magic, info) => (\n          <Area\n            isDraggingOver={info.isDraggingOver}\n            isDraggingFromThis={Boolean(info.draggingFromThisWith)}\n            ref={magic.innerRef}\n            {...magic.droppableProps}\n          >\n            {toDos.map((toDo, index) => (\n              <DragabbleCard\n                key={toDo.id}\n                index={index}\n                toDoId={toDo.id}\n                toDoText={toDo.text}\n              />\n            ))}\n            {magic.placeholder}\n          </Area>\n        )}\n      </Droppable>\n    </Wrapper>\n  );\n}\nexport default Board;\n","import { Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nconst Wrapper = styled.div<{ isDraggingOver: boolean }>`\n  margin-top: 20px;\n  margin-left:100px\n  width: 50px;\n  height: 50px;\n  background-color: ${(props) => (props.isDraggingOver ? \"tomato\" : \"#dadfe9\")};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n  div {\n    position: absolute;\n  }\n`;\n\nfunction Trash() {\n  return (\n    <Droppable droppableId=\"trash\">\n      {(magic, info) => (\n        <Wrapper ref={magic.innerRef} isDraggingOver={info.isDraggingOver}>\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <span style={{ width: \"17px\", cursor: \"pointer\" }}>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                strokeWidth=\"1.5\"\n                stroke=\"#000\"\n                className=\"w-6 h-6\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"\n                />\n              </svg>\n            </span>\n          </div>{\" \"}\n          {magic.placeholder}\n        </Wrapper>\n      )}\n    </Droppable>\n  );\n}\n\nexport default Trash;\n","import { DragDropContext, DropResult } from \"react-beautiful-dnd\";\nimport { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { toDoState } from \"./atoms\";\nimport Board from \"./Components/Board\";\nimport Trash from \"./Components/Trash\";\nconst Wrapper = styled.div`\n  display: grid;\n  width: 100vw;\n  margin: 0 auto;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\nconst Boards = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  width: 100%;\n  gap: 30px;\n`;\n\nfunction App() {\n  const [toDos, setToDos] = useRecoilState(toDoState);\n  const onDragEnd = (info: DropResult) => {\n    const { destination, source } = info;\n    if (!destination) return;\n    //Delete Item in the Bin\n    if (destination?.droppableId === \"trash\") {\n      setToDos((allBoards) => {\n        const boardCopy2 = [...allBoards[source.droppableId]];\n        boardCopy2.splice(source.index, 1);\n        const newAllBoards = {\n          ...allBoards,\n          [source.droppableId]: boardCopy2,\n        };\n\n        return newAllBoards;\n      });\n    }\n    if (\n      destination?.droppableId === source.droppableId &&\n      destination?.droppableId !== \"trash\"\n    ) {\n      // same board movement.\n      setToDos((allBoards) => {\n        const boardCopy = [...allBoards[source.droppableId]];\n        const taskObj = boardCopy[source.index];\n        boardCopy.splice(source.index, 1);\n        boardCopy.splice(destination?.index, 0, taskObj);\n        return {\n          ...allBoards,\n          [source.droppableId]: boardCopy,\n        };\n      });\n    }\n    if (\n      destination.droppableId !== source.droppableId &&\n      destination?.droppableId !== \"trash\"\n    ) {\n      // cross board movement\n      setToDos((allBoards) => {\n        const sourceBoard = [...allBoards[source.droppableId]];\n        const taskObj2 = sourceBoard[source.index];\n        const destinationBoard = [...allBoards[destination.droppableId]];\n        sourceBoard.splice(source.index, 1);\n        destinationBoard.splice(destination?.index, 0, taskObj2);\n        return {\n          ...allBoards,\n          [source.droppableId]: sourceBoard,\n          [destination.droppableId]: destinationBoard,\n        };\n      });\n    }\n  };\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Wrapper>\n        <Boards>\n          {Object.keys(toDos).map((boardId) => (\n            <Board boardId={boardId} key={boardId} toDos={toDos[boardId]} />\n          ))}\n        </Boards>\n        <Trash />\n      </Wrapper>\n    </DragDropContext>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { darkTheme } from \"./theme\";\nimport { createGlobalStyle } from \"styled-components\";\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:#403f3f;\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <ThemeProvider theme={darkTheme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: \"#0079bf\",\n  boardColor: \"#DADFE9\",\n  cardColor: \"white\",\n};\n"],"sourceRoot":""}